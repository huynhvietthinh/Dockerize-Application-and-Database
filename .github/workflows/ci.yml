# Tên của workflow, sẽ hiển thị trên tab Actions của GitHub
name: CI Pipeline

# 1. Yêu cầu: Trigger on push or pull request
on:
  push:
    # Chỉ chạy khi push lên nhánh 'main' (hoặc 'master')
    branches: [ "main" ]
  pull_request:
    # Chạy cho mọi pull request nhắm vào mọi nhánh
    branches: [ "*" ]

# Định nghĩa các công việc (jobs) sẽ chạy
jobs:
  # Tên của job (bạn có thể tự đặt)
  build-and-test:
    # Chỉ định máy ảo để chạy job (Ubuntu mới nhất là lựa chọn phổ biến)
    runs-on: ubuntu-latest

    # Các bước (steps) tuần tự sẽ được thực hiện
    steps:
      # Bước 1: Checkout code từ repository về máy ảo
      - name: Check out repository
        uses: actions/checkout@v4

      # Bước 2: Cài đặt môi trường Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Chỉ định phiên bản Node.js

      # Bước 3: Cài đặt các dependencies (dùng 'npm ci' nhanh và an toàn hơn 'npm install' cho CI)
      - name: Install dependencies
        run: npm ci

      # Bước 4: Chạy Lint (Yêu cầu 2: Lint script)
      - name: Run linter
        run: npm run lint

      # Bước 5: Chạy Tests và tạo Coverage (Yêu cầu 2: Test script)
      # Chúng ta dùng script 'test:coverage' đã tạo ở trên
      - name: Run tests with coverage
        run: npm run test:coverage

      # Bước 6: Upload artifact (Yêu cầu 3: Upload coverage artifact)
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          # Tên của artifact sẽ hiển thị trên GitHub
          name: coverage-report
          # Đường dẫn đến thư mục/file bạn muốn upload
          # (Jest đã tạo ra thư mục 'coverage' cho chúng ta)
          path: ./coverage/
  # ... (job 'build-and-test' của bạn kết thúc ở trên)

  # JOB MỚI: Chạy Integration Test
  integration-test:
    # Yêu cầu: Chạy SAU KHI job 'build-and-test' thành công
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Lấy code về (lần này có cả thư mục postman/)
      - name: Check out repository
        uses: actions/checkout@v4

      # Bước 2: Tạo file .env từ GitHub Secrets (bí mật bạn vừa tạo ở Bước 3.1)
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      # Bước 3: Khởi động app và database bằng Docker Compose
      - name: Start services (app + db)
        run: docker compose up -d

      # Bước 4: Đợi cho đến khi app sẵn sàng (RẤT QUAN TRỌNG)
      - name: Wait for services
        run: |
          echo "Waiting for health endpoint..."
          # Lệnh này sẽ kiểm tra /health liên tục, 5 giây 1 lần, cho đến khi thành công
          until $(curl --output /dev/null --silent --head --fail http://localhost:3000/health); do
            printf '.'
            sleep 5
          done
          echo "Service is up and running!"

      # Bước 5: Cài đặt Newman (công cụ chạy test Postman)
      - name: Install Newman
        run: npm install -g newman

      # Bước 6: Chạy test! (Đây chính là yêu cầu của bài lab)
      - name: Run Postman tests (Newman)
        run: newman run postman/MockTestAPI.postman_collection.json